/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import DAO.DAOException;
import DAO.DAOManager;
import DAOMySQL.MySQLDAOManager;
import Modelo.notas;
import Modelo.peliculas;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Jesús Moisés
 */
public class JDGesRentadas extends javax.swing.JDialog {

     //Creamos un objeto de tipo interface IPeliculasDAO
    private DAOManager manager = null;
   
    //Modelo para nuestra tablaPeliculas
    private PeliculasVisiblesTableModel model;
    
    String estadoR = "RENTADA";
    String estadoV = "VENCIDA";
    String[] ids;
    int cantidad = 0;
    
    /**
     * Creates new form JDGesRentadas
     */
    public JDGesRentadas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //Obtenemos todos los métodos de la clase MySQLPeliculasDAO
        this.manager = new MySQLDAOManager();
        
        
        
        try {
            inicializarListaPeliculasRent();
            fechaLimite();
            inicializarListaPeliculasNoDevueltas();
        }catch (DAOException ex) {
            Logger.getLogger(JDPeliculas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(JDGesRentadas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelImage2 = new org.edisoncor.gui.panel.PanelImage();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btnDevolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRentadas = new rojerusan.RSTableMetro();
        jPanel3 = new javax.swing.JPanel();
        btnDevolver1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNoDevueltas = new rojerusan.RSTableMetro();
        btnSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgGestiones/peliRent.png"))); // NOI18N

        javax.swing.GroupLayout panelImage2Layout = new javax.swing.GroupLayout(panelImage2);
        panelImage2.setLayout(panelImage2Layout);
        panelImage2Layout.setHorizontalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        panelImage2Layout.setVerticalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel1.add(panelImage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 320, 50));

        jSeparator1.setBackground(new java.awt.Color(255, 214, 71));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 700, 10));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/regresarPeli.png"))); // NOI18N
        btnDevolver.setBorderPainted(false);
        btnDevolver.setContentAreaFilled(false);
        btnDevolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDevolver.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/regresarPeli(1).png"))); // NOI18N
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });
        jPanel2.add(btnDevolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel3.setText("Devolver");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, -1, -1));

        tblRentadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRentadas.setAltoHead(20);
        tblRentadas.setColorBackgoundHead(new java.awt.Color(255, 192, 0));
        tblRentadas.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tblRentadas.setColorBordeHead(new java.awt.Color(255, 192, 0));
        tblRentadas.setColorFilasBackgound1(new java.awt.Color(255, 242, 204));
        tblRentadas.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblRentadas.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tblRentadas.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tblRentadas.setColorSelBackgound(new java.awt.Color(255, 243, 166));
        tblRentadas.setColorSelForeground(new java.awt.Color(0, 0, 0));
        tblRentadas.setFuenteFilas(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        tblRentadas.setFuenteFilasSelect(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        tblRentadas.setFuenteHead(new java.awt.Font("Rockwell", 1, 15)); // NOI18N
        tblRentadas.setMultipleSeleccion(false);
        tblRentadas.setShowHorizontalLines(false);
        jScrollPane3.setViewportView(tblRentadas);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 680, 120));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 700, 190));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDevolver1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/regresarPeli.png"))); // NOI18N
        btnDevolver1.setBorderPainted(false);
        btnDevolver1.setContentAreaFilled(false);
        btnDevolver1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDevolver1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/regresarPeli(1).png"))); // NOI18N
        btnDevolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolver1ActionPerformed(evt);
            }
        });
        jPanel3.add(btnDevolver1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel4.setText("Devolver");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, -1, -1));

        tblNoDevueltas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNoDevueltas.setAltoHead(20);
        tblNoDevueltas.setColorBackgoundHead(new java.awt.Color(255, 192, 0));
        tblNoDevueltas.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tblNoDevueltas.setColorBordeHead(new java.awt.Color(255, 192, 0));
        tblNoDevueltas.setColorFilasBackgound1(new java.awt.Color(255, 242, 204));
        tblNoDevueltas.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblNoDevueltas.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tblNoDevueltas.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tblNoDevueltas.setColorSelBackgound(new java.awt.Color(255, 243, 166));
        tblNoDevueltas.setColorSelForeground(new java.awt.Color(0, 0, 0));
        tblNoDevueltas.setFuenteFilas(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        tblNoDevueltas.setFuenteFilasSelect(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        tblNoDevueltas.setFuenteHead(new java.awt.Font("Rockwell", 1, 15)); // NOI18N
        tblNoDevueltas.setMultipleSeleccion(false);
        tblNoDevueltas.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(tblNoDevueltas);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 670, 120));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 690, 190));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/close door.png"))); // NOI18N
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgIconos/open door.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 560, 50, -1));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel2.setText("Salir");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 600, -1, -1));

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgGestiones/noDevueltas.png"))); // NOI18N

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jPanel1.add(panelImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 370, 60));

        jSeparator2.setBackground(new java.awt.Color(255, 214, 71));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 690, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        //colocamos un 1 para saber que es de la tblRentadas
        //int tbl = 1;
        //Mandamos llamar el método devolver
        devolver(1);
    }//GEN-LAST:event_btnDevolverActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Cerramos la ventana
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnDevolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolver1ActionPerformed
        //Mandamos llamar el método devolver
        devolver(0);
    }//GEN-LAST:event_btnDevolver1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDGesRentadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDGesRentadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDGesRentadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDGesRentadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDGesRentadas dialog = new JDGesRentadas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDevolver;
    private javax.swing.JButton btnDevolver1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private org.edisoncor.gui.panel.PanelImage panelImage2;
    private rojerusan.RSTableMetro tblNoDevueltas;
    private rojerusan.RSTableMetro tblRentadas;
    // End of variables declaration//GEN-END:variables

    /**
     * Método para cargar la tabla con las películas Rentadas
     * @throws DAOException 
     */
    private void inicializarListaPeliculasRent() throws DAOException {
        model = new PeliculasVisiblesTableModel(manager.getPeliculasDAO());
            
        //Asignamos el modelo y ponemos los titulos a ver en nuestra tabla
        tblRentadas.setModel(model);
        model.updateModelAll(estadoR);
        model.fireTableDataChanged();
    }// fin del método inicializarListaPeliculasRent
    
    /**
     * Método para cargar la tabla con las películas Rentadas no Devueltas
     * @throws DAOException 
     */
    private void inicializarListaPeliculasNoDevueltas() throws DAOException {
       
        model = new PeliculasVisiblesTableModel(manager.getPeliculasDAO());
            
        //Asignamos el modelo y ponemos los titulos a ver en nuestra tabla
        tblNoDevueltas.setModel(model);
        model.updateModelID(estadoV);
        model.fireTableDataChanged();
        inicializarListaPeliculasRent();
    }// fin del método inicializarListaPeliculasNoDevueltas

    /**
     * Método para ver las películas que están vencidas 
     * @throws DAOException
     * @throws ParseException 
     */
    private void fechaLimite() throws DAOException, ParseException {
        //Obtenemos la fecha Actual
        Date fechaHoy = new Date();
        
        // El formato de fecha está especificado  
        String strDateFormat = "YYYY-MM-dd"; 
        // La cadena de formato de fecha se pasa como un argumento al objeto
        SimpleDateFormat objSDF = new SimpleDateFormat(strDateFormat);
        /*Aplicamos el formato a nuestra fecha para que se pueda comparar con la fecha de la película RENTADA
        * ya que la de la BD tienen este formato
        */
        System.out.println(objSDF.format(fechaHoy));
        objSDF.format(fechaHoy);
        
        Calendar calendar = Calendar.getInstance(); 
        
        Date date = null;
        calendar.setTime(date); 
        calendar.set(Calendar.YEAR, 0); 
        calendar.set(Calendar.MONTH, 0); 
        calendar.set(Calendar.DAY_OF_YEAR, 0);  

        System.out.println(calendar.getTime()); 
        
        //Obtenemos la cantidad de filas que hay en nuestra tabla
        int filas = tblRentadas.getRowCount();
        
        ArrayList<notas> misRentas = new ArrayList<notas>();
        misRentas = (ArrayList<notas>) manager.getNotasDAO().obtenerNotas();
        //Guardaremos todas las fechas limite de la BD
        Date[] fechasLim = new Date[misRentas.size()];
        //Guardaremos todos los id de las películas rentadas de la BD
        String[] id = new String[misRentas.size()];
        //Guardaremos todos los id de las películas rentadas que están en la tblRentadas
        String[] idPelitbl = new String[misRentas.size()];
        
        //For para guardar todos los id y fechasLimite de las BD
        for(int i = 0; i < filas; ++i){
            idPelitbl[i] = (String) tblRentadas.getValueAt(i, 0);
            fechasLim[i] = misRentas.get(i).getFechaDevolucion();
            id[i] = misRentas.get(i).getPeliID();
        }// fin del for
        
        //For para guardar todos los id de las películas de la tblRentadas
        for(int i = 0; i < misRentas.size(); ++i){
            id[i] = misRentas.get(i).getPeliID();
            fechasLim[i] = misRentas.get(i).getFechaDevolucion();
        }// fin del for
    
        /**
         * Comparamos cada idPelicula con toda la lista de las que están rentadas
         */
        for(int i = 0; i < misRentas.size(); ++i){
            for(int k = 0; k < misRentas.size(); ++k){
                /**
                 * Si un id de la BD es igual al de la tbl entonces comparamos las fechas
                 */
                if(id[i].equals(idPelitbl[k])){
                    /**
                     * Comparamos las fechas para ver si ya se pasaron con el limite
                     */
                    if(fechasLim[i].compareTo(fechaHoy) < 0){
                        ids = new String[misRentas.size()];
                        ids[i] = id[i];
                        //Llamamos el método vencida
                        vencida(i);
                    }// fin del if interno
                }//fin del if externo
            }// fin del for interno
        }// fin del for
    }//fin del método fechaLimite

    /**
     * Método para validar que se haya seleccionado una fila se la tabla
     * @return 
     */
    private boolean seleccion() {
       boolean validar = false;
        //si se selecciona una fila entonces se devuelve la película
       if(tblRentadas.getSelectedRow() > -1 || tblNoDevueltas.getSelectedRow() > -1){
           validar = true;
       }else{
            validar = false;
            ImageIcon miIcono = new ImageIcon(getClass().getResource("/imgIconos/seleccionFila.png"));
            JOptionPane.showMessageDialog(null, "<html><h1>Selecciona una Película</h1></html>",
                    "Selecciona una Fila", 0, miIcono);
        }// fin del else
       
       return validar;
    }// fin del método seleccion

    /**
     * Método para devolver una película su estado será ACTIVO
     */
    private void devolver(int tbl) {
        //Verificamos que se haya seleccionado una fila para cambiar el estado
        if(seleccion()){
            int fila;
            String peli;
            /**
             * Si tbl es igual a 1 entonces sabremos que la película a devolver será RENTADA
             * si tbl es igual a 0 entonces la película a devolver será VENCIDA
             */
            if(tbl == 1){
                //Obtenemos la fila seleccionada de la tbl Rentadas
                fila = tblRentadas.getSelectedRow();
                // Obtenemos el id de la película seleccionada
                peli = (String) tblRentadas.getValueAt(fila, 0);
            }
            else{
                fila = tblNoDevueltas.getSelectedRow();
                // Obtenemos el id de la película seleccionada
                peli = (String) tblNoDevueltas.getValueAt(fila, 0);
            }//fin del if else
            
            //Colocamos el estado a ACTIVO que será el estado al cuál se hará el cambio
            String estado = "ACTIVO";

            //llamamos el constructor para crear un objeto de tipo peliculas
            peliculas miPelicula = new peliculas(peli, estado);
            try {
                //Hacemos un update para cambiar el estado de la película a ACTIVO
                manager.getPeliculasDAO().estado(miPelicula);
                ImageIcon miIcono = new ImageIcon(getClass().getResource("/imgIconos/peliActualizar.png"));
                JOptionPane.showMessageDialog(null, "<html><h2>La Película ha sido Devuelta</h2></html>", "Proceso Exitoso",
                        0, miIcono); 
                //Llamaos el método para actualizar la tabla
                //inicializarListaPeliculasRent();
                inicializarListaPeliculasNoDevueltas();
            } catch (DAOException ex) {
                Logger.getLogger(JDGesRentadas.class.getName()).log(Level.SEVERE, null, ex);
            }// fin del catch
        }//fin del if
    }// fin del método devolver

    /**
     * Método para obtener la fecha Actual de Sistema
     * @return 
     */
    public static String getFechaActual() {
      Date ahora = new Date();
      SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
      return formateador.format(ahora);
    }// fin del método getFechaActual
    
    /**
     * Método para cambiar de estado de la película a VENCIDA y colocarlas en 
     * la tbl de no Devueltas
     * @param k 
     */
    public void vencida(int k){
        //Colocamos el estado a ACTIVO que será el estado al cuál se hará el cambio
        String estado = "VENCIDA";
        for(int i = 0; i < k; ++ i){
        //llamamos el constructor para crear un objeto de tipo peliculas
        peliculas miPelicula = new peliculas(ids[k], estado);
            try {
                //Hacemos un update para cambiar el estado de la película a VENCIDA
                manager.getPeliculasDAO().estado(miPelicula);                
                //Llamaos el método para actualizar la tabla
                inicializarListaPeliculasNoDevueltas();
            } catch (DAOException ex) {
                Logger.getLogger(JDGesRentadas.class.getName()).log(Level.SEVERE, null, ex);
            }// fin del catch
        }//fin del for
    }// fin del métod vencida
    
}// fin de la clase JDGesRentadas
